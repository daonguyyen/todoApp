{"version":3,"sources":["components/layout/Header.js","components/TodoItem.js","components/Todos.js","components/AddTodo.js","components/Footer.js","store/containers/Footer.js","store/actions/changeThemeAction.js","components/TodoApp.js","App.js","reportWebVitals.js","store/reducers/themeReducers.js","store/reducers/index.js","index.js"],"names":["Header","className","React","Component","TodoItem","this","props","todo","completed","id","title","type","checked","onChange","handleChange","onClick","deleteTodo","Todos","todos","map","AddTodo","useState","setTitle","onSubmit","e","preventDefault","addTodo","placeholder","value","target","Footer","submitThemeColor","bind","color","console","log","saveColorTheme","nextprops","JSON","stringify","document","documentElement","style","setProperty","themeColor","connect","state","dispatch","payload","saveTheme","TodoApp","setState","useEffect","axios","get","params","_limit","then","response","data","todoData","post","delete","filter","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initState","combineReducers","action","Object","assign","store","createStore","rootReducer","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b1707889.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nclass Header extends React.Component {\r\n    render() {\r\n        return (\r\n            <header className=\"header-container\">\r\n                <h1 className=\"header-title\">Simple Todo App</h1>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header","import React from 'react'\r\n\r\nclass TodoItem extends React.Component {\r\n    render() {\r\n\r\n        const { completed, id , title } = this.props.todo\r\n        return (\r\n            <li className=\"todo-item\">\r\n                <input \r\n                    type=\"checkbox\" \r\n                    checked={completed} \r\n                    onChange={() => this.props.handleChange(id)}\r\n                    />\r\n                <span className={completed ? \"completed\" : null}>\r\n                    {title}\r\n                </span>\r\n                <button \r\n                    className=\"btn-style\"\r\n                    onClick={() => this.props.deleteTodo(id)}    \r\n                >x</button>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoItem","import React from 'react'\r\nimport TodoItem from './TodoItem'\r\n\r\nclass Todos extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ul>\r\n                    {this.props.todos.map( todo => (\r\n                        <TodoItem \r\n                            key={todo.id} \r\n                            todo={todo} \r\n                            handleChange={this.props.handleChange}\r\n                            deleteTodo={this.props.deleteTodo}\r\n                        />\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Todos","import React, {useState} from 'react'\r\n\r\n//Class component\r\n// class AddTodo extends React.Component {\r\n\r\n//     state = {\r\n//         title : \"\"\r\n//     }\r\n\r\n//     onInputChange = e => {\r\n//         this.setState({\r\n//             title: e.target.value\r\n//         })\r\n//     }\r\n\r\n//     addTodo = e => {\r\n//         e.preventDefault()\r\n//         this.props.addTodo(this.state.title)\r\n//         this.setState ({\r\n//             title : \"\"\r\n//         })\r\n//     }\r\n\r\n//     render(){\r\n//         return(\r\n//             <form className=\"form-container\" onSubmit={this.addTodo}>\r\n//                 <input \r\n//                     type=\"text\" \r\n//                     placeholder=\"Add todo ...\" \r\n//                     className=\"input-text\" \r\n//                     value={this.state.title}\r\n//                     onChange={this.onInputChange} />\r\n//                 <input type=\"submit\" value=\"Submit\" className=\"input-submit\" />\r\n//             </form>\r\n//         )\r\n//     }\r\n// }\r\n\r\n//Functional Component using Hook\r\nfunction AddTodo (props) {\r\n    const [title, setTitle] = useState(\"\")\r\n\r\n    const onInputChange = e => {\r\n        setTitle(e.target.value)\r\n    }\r\n\r\n    const addTodo = e => {\r\n        e.preventDefault()\r\n        props.addTodo(title)\r\n        setTitle(\"\")\r\n    }\r\n\r\n    return (\r\n        <form className=\"form-container\" onSubmit={addTodo}>\r\n            <input \r\n                type=\"text\" \r\n                placeholder=\"Add todo ...\" \r\n                className=\"input-text\" \r\n                value={title}\r\n                onChange={onInputChange} />\r\n            <input type=\"submit\" value=\"Submit\" className=\"input-submit\" />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nexport default AddTodo","import React from 'react'\r\n\r\nconst RED = \"#ff0000\"\r\nconst BLUE = \"#0000ff\"\r\nconst GRAY = \"#678c89\"\r\n\r\nclass Footer extends React.Component {\r\n    constructor(props) {\r\n        super(props) \r\n        this.submitThemeColor = this.submitThemeColor.bind(this)\r\n        \r\n    }\r\n\r\n    submitThemeColor(color){\r\n        // lưu giá trị mã màu theme vào Store - redux\r\n        // Xử lý sau\r\n        if(color) {\r\n            console.log('handleChangeTheme');\r\n            this.props.saveColorTheme(color)\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextprops) {\r\n        console.log('UNSAFE_componentWillReceiveProps: '+ JSON.stringify(nextprops));\r\n        document \r\n            .documentElement\r\n            .style\r\n            .setProperty(\"--main-color\", nextprops.themeColor.color)\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"footer\">\r\n                <div className=\"vertical-center\">\r\n                    <span>Choose Theme</span>\r\n                    <button onClick={ () => this.submitThemeColor(RED)} className=\"dot red\" />\r\n                    <button onClick={ () => this.submitThemeColor(BLUE)} className=\"dot blue\" />\r\n                    <button onClick={ () => this.submitThemeColor(GRAY)} className=\"dot gray\" />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer","import {connect} from 'react-redux'\r\nimport {saveTheme} from '../actions/changeThemeAction'\r\nimport Footer from '../../components/Footer'\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    dispatch,\r\n    saveColorTheme : color => dispatch(saveTheme(color)),\r\n})\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        themeColor : state.color\r\n    }\r\n}\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps) (Footer)","export const saveTheme = color => ({\r\n    type: \"CHANGE_THEME\",\r\n    payload: {\r\n        color\r\n    }\r\n})","import React, {useState, useEffect} from 'react'\r\nimport Header from './layout/Header'\r\nimport Todos from './Todos'\r\nimport AddTodo from './AddTodo'\r\nimport Footer from '../store/containers/Footer'\r\n// import {v4 as uuid} from \"uuid\"; \r\n\r\n//Khai bao thu vien axios\r\nimport axios from 'axios'\r\n\r\n// class TodoApp extends React.Component {\r\n\r\n//     state = {\r\n//         todos: []\r\n//     };\r\n\r\n//     handleCheckboxChange = (id) => {\r\n//         this.setState({\r\n//             todos: this.state.todos.map(todo => {\r\n//                 if(todo.id === id) {\r\n//                     todo.completed = !todo.completed\r\n//                 }\r\n//                 return todo;\r\n//             })\r\n//         })\r\n//     }\r\n\r\n//     deleteTodo = (id) => {\r\n//         axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\r\n//         .then(response => this.setState({\r\n//             todos : [\r\n//                 ...this.state.todos.filter(todo => {\r\n//                     return todo.id !== id\r\n//                 })\r\n//             ]\r\n//         }))\r\n        \r\n//     }\r\n\r\n//     addTodo = title => {\r\n//         // const newTodo = {\r\n//         //     id: uuid(),\r\n//         //     title: title,\r\n//         //     completed: false\r\n//         // }\r\n//         const todoData = {\r\n//             title: title,\r\n//             completed: false\r\n//         }\r\n//         axios.post(\"https://jsonplaceholder.typicode.com/todos\", todoData)\r\n//         .then(response => {\r\n//             console.log(response.data)\r\n//             this.setState({\r\n//                 todos: [...this.state.todos, response.data]\r\n//             })\r\n//         })\r\n        \r\n//     }\r\n\r\n//     componentDidMount() {\r\n//         const config = {\r\n//             params: {\r\n//                 _limit: 10\r\n//             }\r\n//         }\r\n//         //Tao GET request de lay danh sach tren ham render()\r\n//         axios.get(\"https://jsonplaceholder.typicode.com/todos\", config)\r\n//         .then(response => this.setState({ todos : response.data }));\r\n//     }\r\n    \r\n\r\n//     render() {\r\n\r\n//         return ( \r\n//             <div className=\"container\">\r\n//                 <Header />\r\n//                 <AddTodo addTodo = {this.addTodo} />\r\n//                 <Todos \r\n//                     todos={this.state.todos} \r\n//                     handleChange = {this.handleCheckboxChange}\r\n//                     deleteTodo = {this.deleteTodo}    \r\n//                 />\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n\r\n//Functional Component\r\nfunction TodoApp() {\r\n    const [state, setState] = useState({\r\n        todos : []\r\n    })\r\n\r\n    const handleCheckboxChange = (id) => {\r\n        setState({\r\n            todos: state.todos.map(todo => {\r\n                if(todo.id === id) {\r\n                    todo.completed = !todo.completed\r\n                }\r\n                return todo;\r\n            })\r\n        })\r\n    }\r\n\r\n    const deleteTodo = (id) => {\r\n        axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\r\n        .then(response => setState({\r\n            todos : [\r\n                ...state.todos.filter(todo => {\r\n                    return todo.id !== id\r\n                })\r\n            ]\r\n        }))\r\n        \r\n    }\r\n\r\n    const addTodo = title => {\r\n        const todoData = {\r\n            title: title,\r\n            completed: false\r\n        }\r\n        axios.post(\"https://jsonplaceholder.typicode.com/todos\", todoData)\r\n        .then(response => {\r\n            console.log(response.data)\r\n            setState({\r\n                todos: [...state.todos, response.data]\r\n            })\r\n        })\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n        const config = {\r\n            params: {\r\n                _limit: 10\r\n            }\r\n        }\r\n        //Tao GET request de lay danh sach tren ham render()\r\n        axios.get(\"https://jsonplaceholder.typicode.com/todos\", config)\r\n        .then(response => setState({ todos : response.data }));\r\n    }, [])\r\n\r\n    return ( \r\n            <div className=\"container\">\r\n                <Header />\r\n                <AddTodo addTodo = {addTodo} />\r\n                <Todos todos={state.todos} \r\n                    handleChange = {handleCheckboxChange}\r\n                    deleteTodo = {deleteTodo}    \r\n                />\r\n                <Footer/>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default TodoApp","import React, { Component } from 'react'\nimport TodoApp from './components/TodoApp'\nimport \"./App.css\"\n\nexport default class App extends Component {\n  render() {\n    return (\n      <TodoApp />\n    )\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","let initState = {\r\n    color : \"#ffffff\"\r\n}\r\n\r\nexport default function themeReducer (state = initState, action ) {\r\n    switch (action.type) {\r\n        case 'CHANGE_THEME' :\r\n                console.log('themeReducer: ' + JSON.stringify(state))\r\n            return Object.assign({}, state , {\r\n                color : action.payload.color\r\n            })\r\n        default :\r\n            return initState\r\n\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport color from './themeReducers'\r\n\r\nexport default combineReducers({\r\n    color\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport {createStore} from 'redux'\r\nimport {Provider} from 'react-redux'\r\nimport rootReducer from './store/reducers'\r\n\r\nconst store = createStore(rootReducer)\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}